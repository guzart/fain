@mixin border-radius($radius: $border-radius) {
  @if $enable-rounded {
    border-radius: $radius;
  }
}

@mixin box-shadow($shadow...) {
  @if $enable-shadows {
    box-shadow: $shadow;
  }
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@mixin clearfix {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

@mixin form-control-focus {
  &:focus {
    @include box-shadow($input-box-shadow-focus);
    background-color: $input-bg-focus;
    border-color: $input-border-focus;
    color: $input-color-focus;
    outline: none;
  }
}

@mixin hover {
  &:hover {
    @content;
  }
}

@mixin hover-focus {
  @if $enable-hover-media-query {
    &:focus { @content }
    @include hover { @content };
  } @else {
    &:focus,
    &:hover {
      @content
    }
  }
}

@mixin make-container($gutters: $grid-gutter-widths) {
  margin-left: auto;
  margin-right: auto;
  @if not $enable-flex {
    @include clearfix;
  }

  @each $breakpoint in map-keys($gutters) {
    @include media-breakpoint-up($breakpoint) {
      $gutter: map-get($gutters, $breakpoint);
      padding-left:  ($gutter / 2);
      padding-right: ($gutter / 2);
    }
  }
}

@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {
  @each $breakpoint, $container-max-width in $max-widths {
    @include media-breakpoint-up($breakpoint, $breakpoints) {
      max-width: 100%;
      width: $container-max-width;
    }
  }
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin transition($transition...) {
  @if $enable-transitions {
    transition: $transition;
  }
}
