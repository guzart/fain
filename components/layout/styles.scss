@import '../../styles/functions';
@import '../../styles/variables';
@import '../../styles/mixins';

.container {
  @include make-container;
  @include make-container-max-widths;
}

.containerFluid {
  @include make-container;
}

.row {
  @include make-row;
}

.column {
  @include make-gutters($grid-gutter-widths);

  min-height: 1px;
  position: relative;
  @if $enable-flex {
    width: 100%;
  }
}

$breakpoint-counter: 0;
@each $breakpoint in map-keys($grid-breakpoints) {
  $breakpoint-name: titleize($breakpoint);
  $breakpoint-counter: ($breakpoint-counter + 1);

  @include media-breakpoint-up($breakpoint, $grid-breakpoints) {
    // Provide basic `.col-{bp}` classes for equal-width flexbox columns
    @if $enable-flex {
      .col#{$breakpoint-name} {
        flex-basis: 0;
        flex-grow: 1;
        max-width: 100%;
      }
    }

    @for $i from 1 through $grid-columns {
      .col#{$breakpoint-name}#{$i} {
        @include make-col($i, $grid-columns);
      }
    }

    @each $modifier in (pull, push) {
      @for $i from 0 through $grid-columns {
        .#{$modifier}#{$breakpoint-name}#{$i} {
          @include make-col-modifier($modifier, $i, $grid-columns)
        }
      }
    }

    // `$grid-columns - 1` because offsetting by the width of an entire row isn't possible
    @for $i from 0 through ($grid-columns - 1) {
      @if $breakpoint-counter != 1 or $i != 0 { // Avoid emitting useless .offset-xs-0
        .offset#{$breakpoint-name}#{$i} {
          @include make-col-modifier(offset, $i, $grid-columns)
        }
      }
    }
  }
}
