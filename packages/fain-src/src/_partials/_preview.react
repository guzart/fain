// @flow

/* eslint-disable
  no-underscore-dangle,
  react/no-danger, react/jsx-filename-extension,
  import/no-extraneous-dependencies */

import glob from 'glob';
import path from 'path';
import get from 'lodash/get';
import React from 'react';
import { utils } from '@frctl/fractal';

function renderLinkStylesheets(props) {
  const builderUrls = props.fractal.web.get('builder.urls');
  const filePath = props.filePath;

  const publicPath = path.resolve(path.dirname(filePath), '../../public');
  const result = glob.sync(path.join(publicPath, '**/*.css'));
  return result
    .map(f => path.relative(publicPath, f))
    .map(f => utils.relUrlPath(f, get(props, 'meta.env.request.path', '/'), builderUrls))
    .map(f => <link rel="stylesheet" href={f} key={f} />);
}

type Props = {
  yield: string,
};

function PreviewTemplate(props: Props) {
  return (
    <html lang="en" dir="ltr" prefix="og: http://ogp.me/ns#" className="no-js fonts-loaded">
      <head>
        <meta charSet="utf-8" />
        <meta name="referrer" content="origin" />
        <meta name="robots" content="index, follow" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        {renderLinkStylesheets(props)}
      </head>
      <body>
        <div dangerouslySetInnerHTML={{ __html: props.yield }} />
      </body>
    </html>
  );
}


export default PreviewTemplate;
